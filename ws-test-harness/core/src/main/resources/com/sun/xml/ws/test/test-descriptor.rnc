#
# Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Distribution License v. 1.0, which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: BSD-3-Clause
#

# test descriptor
#   Holds information necessary for the test harness to run one specific test.
#
# Simple example descriptor file:
#
# <descriptor>
#    <description>this is a very useful test that tests stuff</description>
#    <client href="foo.bsh" since="2.0"/>
#    <service basedir=".">
#        <wsdl href="test.wsdl"/>
#    </service>
# </despcriptor>
#
#
start = element descriptor {

    # 'versionAttributes' element specifies which versions of the
    #   code-under-test a particular test case is to be run against.
    #
    # See also 'client' element's 'versionAttributes' description.
    # See also 'versionAttributes' pattern definition below.
    #
    versionAttributes &

    # optional transport declaration, in case a test requires a certain
    # kind of transport. If specified, tests will only run with the declared
    # transport and skipped otherwise.
    #
    # See also 'client' element's 'transport' description.
    attribute transport {"http"|"local"}? &

    attribute uses { list { ("servlet30"|"servlet"|"ri"|"multi-endpoint"|"skip-lwhs")+ } }? &

    # optional flag to force test to be skipped
    # to be used only in cases such as when the harness itself
    # is the cause of test failures and similar dilemmas
    attribute skip {"true"|"false"}? &

    # if test cases are related to bugs, list those bug numbers separated by whitespace
    attribute bugs {
      list {
        (
          # 7 digits number indicates a bugster ID
          xsd:string { pattern="[0-9]{7}" } |
          # java.net bugs are projectName-number, like "wsit-123"
          xsd:string { pattern="[A-Za-z0-9\-]+-[1-9][0-9]*" }
        )*
      }
    }? &

    # 'description' is to be used for a human-readable
    #   description of the this particular test case
    #
    element description {text} &

    # list of options passed to test harness that help in test specific configuration
    # of the harness execution.
    element test-options {text}? &



    # list of options passed to wsimport for generating client artifacts
    # and server artifacts respectively.
    element wsimport-client {text}? &
    element wsimport-server {text}? &

    # list of options passed to wsgen for generating artifacts
    element wsgen-options {text}? &

    # list of options passed to javac
    element javac-options {text}? &

    # list of properties passed to system
    element system-properties {text}? &

    # 'client' element holds the information necessary for a given
    #   test client to run. In particular it points to the beanshell
    #   source code for a given test client.
    #
    # There can be zero or more 'client' elements for a test.
    #
    element client {
        # human readable description of the test case.
        element description {text}?,

        # optional transport declaration, in case a testcase requires a certain
        # kind of transport. If specified, tests will only run with the declared
        # transport and skipped otherwise.
        attribute transport {"http"|"local"}?,

        # see http://kohsuke.sfbay/hudson/job/jaxws-test-harness/ws/docs/build/index.html#Side_effect_free_tests
        attribute sideEffectFree {"true"}?,

        (
            # 'href' is the name or name-pattern for the client beanshell
            #   scripts. if 'href' is a relative path, it will be relative
            #   to the test instance directory.
            #   this attribute supports wildcard, such as "*.bsh"
            #
            attribute href {text} |

            # alternatively, a beanshell script can be specified inline.
            #   this is particularly useful for short scripts, as you
            #   don't have to manage million short files.
            (
                # when you do that, a short human readable name is mandatory
                attribute name {text},
                text
            )
        ),


        # The client's 'versionAttributes' specifies which versions of the
        #   code-under-test that this particular test-client code should be
        #   run against.
        #
        # This allows for different test-clients to run against different versions
        #   of the code-under-test (e.g. JAX-WS 2.0 vs. 2.0.1). This helps to test
        #   features which exist in multiple versions of the code-under-test
        #   but which have version-specific behavior.
        #
        versionAttributes

    }* &

    # If specified, this bean shell script gets run before every
    # 'client' script execution. Useful for defining common variables
    # or shared functions.
    #
    element pre-client {
        text
    }? &

    # XML resource to be made available to clients
    element xml-resource {
        # the resource is made available by this variable name
        attribute name {text},
        (
            # XML can be either defined inline
            wellformedXml |
            # or defined externally
            attribute href {text}
        )
    }* &

    # 'service' element holds information for a particular
    #
    # There must be at least one 'service' element per test.
    #   It is expected that most test cases will only have one
    #   service.  However, some technologies like WS-Trust require
    #   supporting services, such as an STS for Trust.
    #
    element service {

        # basedir defaults to ".", so that a single service test case can be written more quickly
        attribute basedir {text}?,

        # (rarely used)
        # if automatic discovery of classes with @WebService is not desirable,
        # this attribute can be used to specify the class with @WebService.
        # this is also needed in a rare occasion where you need to deploy inner class
        attribute class {text}?,

        # 'wsdl' is optional and points to the location of a WSDL, if any.
        #
        element wsdl {

            # 'href' points the WSDL document
            #
            attribute href {text}

        }*
    }* &

    # 'sts' element holds information for a  special handling of
    # sts services
    # In this case the harness should recognize the STS to be a special form
    # of service and not generate client artifacts
    #
    #
    element sts {

        # basedir defaults to ".", so that a single service test case can be written more quickly
        attribute basedir {text}?,

        # 'wsdl' is optional and points to the location of STS WSDL, if any.
        #
        element wsdl {

            # 'href' points the STS WSDL document
            #
            attribute href {text}

        }?

    }? &

    # 'external-metadata' is optional and points to the location
    #  of a external-metadata file, if any. This file must be copied into
    # war file during deployment.
    #
    element external-metadata {

        # 'file' points the WSDL document
        #
        attribute file {text}

    }*
}

# 'versionAttributes' pattern is set of attributes that control
#   applicability of a test
#
versionAttributes =
    attribute since {version}? ,
    attribute until {version}? ,
    attribute excludeFrom {text}?

# version number
#   in the future consider enumeration
#
version = xsd:token

# any well-formed XML
wellformedXml = element * {
    attribute * {text}*,
    (text|wellformedXml)*
}
