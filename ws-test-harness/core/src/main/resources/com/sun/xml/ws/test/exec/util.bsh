// utility methods to be made available to the test clients

/**
 * Method used to add a Handler to a stub or dispatch object.
 */
addHandler(handler,bindingProvider) {
    binding = bindingProvider.getBinding();
    handlers = binding.getHandlerChain();
    handlers.add(handler);
    binding.setHandlerChain(handlers);
}

/**
 * Method used to clear any handlers from a stub or dispatch object.
 */
void clearHandlers(provider) {
    binding = provider.getBinding();
    binding.setHandlerChain(new java.util.ArrayList());
}

/**
 * Reads Source into a SOAP Message
 */
SOAPMessage getSOAPMessage(Source msg) {
    factory = MessageFactory.newInstance();
    message = factory.createMessage();
    message.getSOAPPart().setContent(msg);
    message.saveChanges();
    return message;
}

/**
 * Reads Source into a SOAP Message
 */
SOAPMessage getSOAPMessage12(Source msg) {
    factory = MessageFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL);
    message = factory.createMessage();
    message.getSOAPPart().setContent(msg);
    message.saveChanges();
    return message;
}

/**
 * Creates JAXBContext for the current compiled artifacts
 */
JAXBContext createJAXBContext() {
  return JAXBContext.newInstance(new Class[]{ObjectFactory.class});
}

/**
 * Creates JAXBContext for the current compiled artifacts
 */
JAXBContext createJAXBContext(clazz) {
  return JAXBContext.newInstance(new Class[]{clazz});
}

javax.xml.transform.stream.StreamSource streamSource(File file) {
    return new javax.xml.transform.stream.StreamSource(new FileInputStream(file));
}
